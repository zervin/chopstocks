rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // ==========================================
    // STORAGE SECURITY HELPER FUNCTIONS
    // ==========================================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Enhanced admin check with Firestore validation
    function isAdmin() {
      return isAuthenticated() && 
        request.auth.token.admin == true &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Check if user is active in Firestore
    function isActiveUser() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isActive == true;
    }
    
    // Validate image file types
    function isValidImageType() {
      return resource.contentType in ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
    }
    
    // Validate PDF file type
    function isValidPDFType() {
      return resource.contentType == 'application/pdf';
    }
    
    // Validate file size (in bytes)
    function isValidSize(maxSize) {
      return resource.size <= maxSize;
    }
    
    // Validate filename (no directory traversal, no special chars)
    function isValidFilename(filename) {
      return filename.matches('[a-zA-Z0-9._-]+') && 
        !filename.matches('.*\\.\\./.*') &&
        filename.size() <= 255;
    }
    
    // Check if report exists and user owns it
    function ownsReport(userId, reportId) {
      return isOwner(userId) &&
        firestore.get(/databases/(default)/documents/reports/$(reportId)).data.userId == userId;
    }
    
    // ==========================================
    // USER PROFILE IMAGES - Enhanced Security
    // ==========================================
    match /users/{userId}/profile/{filename} {
      // Users can read their own profile images, admins can read any
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can upload their own profile images with validation
      allow write: if isOwner(userId) &&
        isActiveUser() &&
        isValidImageType() &&
        isValidSize(5 * 1024 * 1024) && // 5MB limit
        isValidFilename(filename) &&
        // Prevent overwriting system files
        !filename.matches('system.*') &&
        // Limit file extensions
        filename.matches('.*\\.(jpg|jpeg|png|gif|webp)');
      
      // Allow deletion of own profile images
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // ==========================================
    // REPORT FILES - Enhanced Security
    // ==========================================
    match /reports/{userId}/{reportId}/{filename} {
      // Users can read their own report files, admins can read any
      allow read: if isOwner(userId) || isAdmin() ||
        // Allow read if report is public and user is active
        (isActiveUser() && 
         firestore.get(/databases/(default)/documents/reports/$(reportId)).data.visibility == 'public' &&
         firestore.get(/databases/(default)/documents/reports/$(reportId)).data.status == 'completed');
      
      // Users can upload files to their own reports with validation
      allow write: if ownsReport(userId, reportId) &&
        isActiveUser() &&
        (isValidPDFType() || isValidImageType()) &&
        isValidSize(10 * 1024 * 1024) && // 10MB limit
        isValidFilename(filename) &&
        // Limit file extensions
        (filename.matches('.*\\.(pdf)') || filename.matches('.*\\.(jpg|jpeg|png|gif|webp)')) &&
        // Prevent overwriting system files
        !filename.matches('system.*');
      
      // Allow deletion of own report files
      allow delete: if ownsReport(userId, reportId) || isAdmin();
    }
    
    // ==========================================
    // TEMPORARY UPLOADS - Enhanced Security
    // ==========================================
    match /temp-uploads/{userId}/{sessionId}/{filename} {
      // Users can read/write their own temporary uploads
      allow read, write: if isOwner(userId) &&
        isActiveUser() &&
        isValidSize(20 * 1024 * 1024) && // 20MB limit for temp files
        isValidFilename(filename) &&
        // Session ID validation (UUID format)
        sessionId.matches('[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}') &&
        // Allow various file types for temp uploads
        (resource.contentType.matches('image/.*') || 
         resource.contentType.matches('application/.*') ||
         resource.contentType.matches('text/.*'));
      
      // Allow deletion of own temporary files
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // ==========================================
    // PUBLIC ASSETS - Enhanced Security
    // ==========================================
    match /public/{category}/{filename} {
      // All authenticated users can read public assets
      allow read: if isAuthenticated();
      
      // Only admins can upload public assets
      allow write: if isAdmin() &&
        category in ['logos', 'templates', 'banners', 'icons'] &&
        (isValidImageType() || isValidPDFType()) &&
        isValidSize(5 * 1024 * 1024) && // 5MB limit
        isValidFilename(filename);
      
      // Only admins can delete public assets
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // ADMIN FILES - Enhanced Security
    // ==========================================
    match /admin/{category}/{filename} {
      // Only admins can access admin files
      allow read, write: if isAdmin() &&
        category in ['backups', 'reports', 'logs', 'configs'] &&
        isValidSize(100 * 1024 * 1024) && // 100MB limit for admin files
        isValidFilename(filename);
      
      // Only admins can delete admin files
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // SYSTEM GENERATED FILES - Server Only
    // ==========================================
    match /system/{category}/{filename} {
      // Only server-side access for system files
      allow read, write, delete: if false;
    }
    
    // ==========================================
    // CACHE FILES - Enhanced Security
    // ==========================================
    match /cache/{userId}/{cacheKey} {
      // Users can read their own cache files
      allow read: if isOwner(userId);
      
      // Only server-side writes for cache consistency
      allow write: if false;
      
      // Allow deletion for cache cleanup
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // ==========================================
    // DEFAULT DENY RULE - Security Fallback
    // ==========================================
    match /{allPaths=**} {
      allow read, write, delete: if false;
    }
  }
}